# Generated by Django 3.2.16 on 2023-01-27 15:35

import birthday.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=50)),
                ('capacity', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evalName', models.CharField(max_length=50)),
                ('tot_grade', models.FloatField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_Extra_Credit', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeeInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guardian', models.CharField(max_length=50)),
                ('admission_fee', models.FloatField()),
                ('tot_amount', models.FloatField()),
                ('discount', models.FloatField(default=0.0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIALLY PAID', 'Partially Paid'), ('PAID', 'Paid')], default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FeePaymant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_amount', models.FloatField()),
                ('created_date', models.CharField(max_length=50)),
                ('due_date', models.CharField(max_length=50)),
                ('until_due_date', models.IntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid')], default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FineInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('descraption', models.CharField(max_length=500)),
                ('guardian', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid')], default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FinePaymant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_amount', models.FloatField()),
                ('created_date', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid')], default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_level', models.CharField(max_length=50)),
                ('fee', models.IntegerField()),
                ('is_semeter', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='GuardianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('address', models.CharField(max_length=400)),
                ('contact_number', models.CharField(max_length=20)),
                ('emergancy_contact', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('citizenship', models.CharField(max_length=50)),
                ('id_num', models.CharField(max_length=50)),
                ('debt', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_name', models.CharField(max_length=30)),
                ('desc', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=50)),
                ('divition_factor', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.FloatField()),
                ('result_wight', models.FloatField()),
                ('date', models.CharField(max_length=50)),
                ('grade_level', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50)),
                ('service_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_enrolled', models.BooleanField()),
                ('student_name', models.CharField(max_length=250)),
                ('father_name', models.CharField(max_length=250)),
                ('mother_name', models.CharField(max_length=250)),
                ('present_address', models.CharField(max_length=400)),
                ('contact_number', models.CharField(max_length=20)),
                ('citizenship', models.CharField(max_length=50)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('birth_date_dayofyear_internal', models.PositiveSmallIntegerField(default=None, editable=False, null=True)),
                ('birth_date', birthday.fields.BirthdayField()),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5)),
                ('relation_with_applicant', models.CharField(blank=True, max_length=255, null=True)),
                ('student_pic', models.ImageField(blank=True, null=True, upload_to='images/studentPic')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termGrade', models.CharField(blank=True, max_length=50, null=True)),
                ('term_Result', models.FloatField()),
                ('rank', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('is_countable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubjEvaluTyp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evalName', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('evaluWight', models.IntegerField()),
                ('year', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SubjScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_name', models.CharField(max_length=50)),
                ('start_score', models.FloatField()),
                ('end_score', models.FloatField()),
            ],
        ),
    ]
